{"version":3,"sources":["components/Three/lights.js","components/Three/VirtualWP.js","App.js","reportWebVitals.js","index.js"],"names":["Lights","props","intensity","castShadow","position","shadowMapHeight","shadowMapWidth","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","Model","group","useRef","useGLTF","nodes","materials","ref","dispose","rotation","Math","PI","material","Screen","geometry","Screen1","DarkGray","Monitor1_1","Monitor1_2","Sphere1","Sphere","WhiteWall2","Cube6","WhiteWall","Cube4","Cube5","Cube2","Cube3","Cube1","Cube","preload","App","colorManagement","shadowMap","camera","fov","fallback","OrbitControls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4898cb8.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Lights(props) {\n\treturn (\n\t\t\t<>\n\t\t\t\t<ambientLight intensity={0.3}/>\n\t\t\t\t<directionalLight\n\t\t\t\t\t\tcastShadow\n\t\t\t\t\t\tposition = {[0, 10, 0]}\n\t\t\t\t\t\tintensity={1.3}\n\t\t\t\t\t\tshadowMapHeight={1024}\n\t\t\t\t\t\tshadowMapWidth={1024}\n\t\t\t\t\t\tshadowCameraFar={50}\n\t\t\t\t\t\tshadowCameraLeft={-10}\n\t\t\t\t\t\tshadowCameraRight={10}\n\t\t\t\t\t\tshadowCameraTop={10}\n\t\t\t\t\t\tshadowCameraBottom={-10}\n\t\t\t\t/>\n\t\t\t\t<pointLight position = {[-10, 0, -20]} intensity={0.5}/>\n\t\t\t\t<pointLight position = {[0, -10, 20]} intensity={0.5}/>\n\t\t\t\t{/*<ambientLight intensity={0.4}/>*/}\n\t\t\t\t{/*<directionalLight*/}\n\t\t\t\t{/*\t\tcastShadow*/}\n\t\t\t\t{/*\t\tposition={[-8, 16, -8]}*/}\n\t\t\t\t{/*\t\tintensity={0}*/}\n\t\t\t\t{/*\t\tshadowMapHeight={1024}*/}\n\t\t\t\t{/*\t\tshadowMapWidth={1024}*/}\n\t\t\t\t{/*\t\tshadowCameraFar={50}*/}\n\t\t\t\t{/*\t\tshadowCameraLeft={-10}*/}\n\t\t\t\t{/*\t\tshadowCameraRight={10}*/}\n\t\t\t\t{/*\t\tshadowCameraTop={10}*/}\n\t\t\t\t{/*\t\tshadowCameraBottom={-10}*/}\n\t\t\t\t{/*/>*/}\n\t\t\t\t{/*<pointLight position = {[0, 50, 0]} intensity={2}/>*/}\n\t\t\t</>\n\t);\n}\n\nexport default Lights;","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei/useGLTF'\n// import MonitorWP from \"./MonitorWP\";\n\nexport default function Model(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/virtualWP.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      {/*<MonitorWP position={[0, 1.2, 0.06]} texture='/screen.png'/>*/}\n      <group position={[0, 1.2, -0.06]} rotation={[-Math.PI, 0, -Math.PI]}>\n        <mesh material={materials.Screen} geometry={nodes.Screen1.geometry} position={[0, 0, 0.01]} />\n        <mesh material={materials.DarkGray} geometry={nodes.Monitor1_1.geometry} position={[0, 0, -0.01]} />\n      </group>\n      <group position={[0, 1.2, 0.06]}>\n        {/*<mesh material={materials.Screen} geometry={nodes.Screen1_1.geometry} position={[0, 0, 0.01]} />*/}\n        <mesh material={materials.DarkGray} geometry={nodes.Monitor1_2.geometry} position={[0, 0, -0.01]} />\n      </group>\n      <group position={[0, 0.47, 0]}>\n        <mesh material={materials.DarkGray} geometry={nodes.Sphere1.geometry} position={[0.26, 0, -0.32]} />\n        <mesh material={materials.DarkGray} geometry={nodes.Sphere.geometry} position={[-0.25, 0, 0.32]} />\n        <mesh material={materials.WhiteWall2} geometry={nodes.Cube6.geometry} position={[0, 0, 0]} />\n      </group>\n      <mesh material={materials.WhiteWall} geometry={nodes.Cube4.geometry} position={[0.33, 0.45, 0]} />\n      <mesh material={materials.WhiteWall} geometry={nodes.Cube5.geometry} position={[-0.33, 0.45, 0]} />\n      <mesh material={materials.DarkGray} geometry={nodes.Cube2.geometry} position={[0, 0.9, 0]} />\n      <mesh material={materials.WhiteWall} geometry={nodes.Cube3.geometry} position={[0, 0.47, 0]} />\n      <mesh material={materials.WhiteWall} geometry={nodes.Cube1.geometry} position={[0, 1.99, 0]} />\n      <mesh material={materials.WhiteWall} geometry={nodes.Cube.geometry} position={[0, 1, 0]} />\n    </group>\n  )\n}\n\nuseGLTF.preload('/virtualWP.glb')\n","import React, {Suspense} from \"react\";\n//Styles\nimport \"./assets/styles/App.scss\";\n\nimport {Canvas} from \"react-three-fiber\";\nimport {OrbitControls} from \"@react-three/drei\";\nimport Lights from \"./components/Three/lights\";\nimport Model from \"./components/Three/VirtualWP\";\n\nconst App = () => {\n  return (\n    <>\n      <Canvas\n        colorManagement\n        shadowMap\n        camera={{position:[5,4,3], fov: 20}}\n      >\n        <Suspense fallback={null}>\n          <Lights/>\n          <Model position = {[0, -1, 0]}/>\n        </Suspense>\n        <OrbitControls/>\n      </Canvas>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}